/// <reference types="node" />
import { EventEmitter } from "events";
export declare class EventPromised<Events> extends Promise<any> {
    private emitter;
    constructor(executor: (resolve: (value?: any | PromiseLike<any>) => void, reject: (reason?: any) => void, emit: (event: Events, ...args: any[]) => void) => void, emitter?: EventEmitter);
    on(eventName: Events extends string ? Events : string | symbol, onData: (...data: any[]) => void): this;
    once(eventName: Events extends string ? Events : string | symbol, onData: (...data: any[]) => void): this;
}
